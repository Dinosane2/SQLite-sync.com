{"version":3,"sources":["../../src/pages/insert/insert.ts","../../src/pages/update/update.ts","../../src/pages/table/table.ts","../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/pages/home/home.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/providers/sqlite-sync/sqlite-sync.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAA0C;AAC2C;AACR;AAC7E;;;;;GAKG;AAOH,IAAa,UAAU;IAQrB,oBAAmB,OAAsB,EACtB,SAAoB,EACpB,UAA8B,EAC9B,SAA0B;QAH1B,YAAO,GAAP,OAAO,CAAe;QACtB,cAAS,GAAT,SAAS,CAAW;QACpB,eAAU,GAAV,UAAU,CAAoB;QAC9B,cAAS,GAAT,SAAS,CAAiB;QANtC,cAAS,GAAG,KAAK,CAAC;QAClB,gBAAW,GAAG,EAAE,CAAC;QAOtB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAC9C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAC7C,GAAG,EAAe,UAAY,EAAZ,SAAI,CAAC,OAAO,EAAZ,cAAY,EAAZ,IAAY;YAA1B,IAAI,MAAM;YACZ,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAC9C;IACH,CAAC;IAED,mCAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;IAC3C,CAAC;IAED,gCAAW,GAAX;QACE,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;IACrB,CAAC;IAED,4BAAO,GAAP,UAAQ,IAAI;QACV,MAAM,EAAC,IAAI,CAAC,WAAW,EAAE,CAAC,EAAC;YACzB,KAAK,QAAQ;gBACX,MAAM,CAAC,MAAM,CAAC;YAChB,KAAK,QAAQ,CAAC;YACd,KAAK,SAAS;gBACZ,MAAM,CAAC,QAAQ,CAAC;YAClB;gBACE,MAAM,CAAC,MAAM,CAAC;QAClB,CAAC;IACH,CAAC;IAED,iCAAY,GAAZ;QAAA,iBAuCC;QAtCC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,yBAAyB,CAAC;QAC7C,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,GAAG,EAAe,UAAY,EAAZ,SAAI,CAAC,OAAO,EAAZ,cAAY,EAAZ,IAAY;YAA1B,IAAI,MAAM;YACZ,EAAE,EAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,EAAC;gBACxC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,OAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;oBAChC,KAAK,EAAE,cAAc;oBACrB,QAAQ,EAAE,mCAAmC;oBAC7C,OAAO,EAAE,CAAC,IAAI,CAAC;iBAChB,CAAC,CAAC;gBACH,OAAK,CAAC,OAAO,EAAE,CAAC;gBAChB,MAAM,CAAC;YACT,CAAC;YACD,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YACjD,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAC/B;QACD,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC,IAAI,CAAC;YAC7E,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBAChC,KAAK,EAAE,SAAS;gBAChB,QAAQ,EAAE,oEAAoE;gBAC9E,OAAO,EAAE,CAAC;wBACR,IAAI,EAAE,IAAI;wBACV,OAAO,EAAE,cAAQ,KAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;qBACvC,CAAC;aACH,CAAC,CAAC;YACH,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG;YACX,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBAChC,KAAK,EAAE,OAAO;gBACd,QAAQ,EAAE,GAAG;gBACb,OAAO,EAAE,CAAC,IAAI,CAAC;aAChB,CAAC,CAAC;YACH,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;IAEH,iBAAC;AAAD,CAAC;AAlFY,UAAU;IALtB,wEAAS,EAAE;IACX,wEAAS,CAAC;QACT,QAAQ,EAAE,aAAa;OACG;KAC3B,CAAC;yEASyC;QACX,8FAAS;QACR,wEAAkB;QACnB,OAAe;AAuE9C;SAlFY,UAAU,e;;;;;;;;;;;;;;;;;;;;;ACfmB;AAC2C;AACR;AAE7E;;;;;GAKG;AAOH,IAAa,UAAU;IASrB,oBAAmB,OAAsB,EACtB,SAAoB,EACpB,UAA8B,EAC9B,SAA0B;QAH1B,YAAO,GAAP,OAAO,CAAe;QACtB,cAAS,GAAT,SAAS,CAAW;QACpB,eAAU,GAAV,UAAU,CAAoB;QAC9B,cAAS,GAAT,SAAS,CAAiB;QANtC,cAAS,GAAG,KAAK,CAAC;QAClB,gBAAW,GAAG,EAAE,CAAC;QAOtB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAC7C,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrC,GAAG,EAAC,IAAI,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,EAAC;YACxB,EAAE,EAAC,IAAI,CAAC,WAAW,EAAE,KAAK,aAAa,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,WAAW,EAAE,KAAK,OAAO,CAAC,WAAW,EAAE,CAAC,EAAC;gBACrG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;oBAChB,IAAI,EAAE,IAAI;oBACV,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,OAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;iBAChD,CAAC,CAAC;gBACH,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAC1C,CAAC;QACH,CAAC;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QAC1C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAEhD,CAAC;IAED,mCAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;IAC3C,CAAC;IAED,4BAAO,GAAP,UAAQ,IAAI;QACV,MAAM,EAAC,IAAI,CAAC,EAAC;YACX,KAAK,QAAQ;gBACX,MAAM,CAAC,MAAM,CAAC;YAChB,KAAK,QAAQ;gBACX,MAAM,CAAC,QAAQ,CAAC;YAClB;gBACE,MAAM,CAAC,MAAM,CAAC;QAClB,CAAC;IACH,CAAC;IAED,gCAAW,GAAX;QACE,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;IACrB,CAAC;IAED,iCAAY,GAAZ;QAAA,iBAwCC;QAvCC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,oBAAoB,CAAC;QACxC,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,GAAG,EAAe,UAAY,EAAZ,SAAI,CAAC,OAAO,EAAZ,cAAY,EAAZ,IAAY;YAA1B,IAAI,MAAM;YACZ,EAAE,EAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,EAAC;gBACxC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,OAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;oBAChC,KAAK,EAAE,cAAc;oBACrB,QAAQ,EAAE,mCAAmC;oBAC7C,OAAO,EAAE,CAAC,IAAI,CAAC;iBAChB,CAAC,CAAC;gBACH,OAAK,CAAC,OAAO,EAAE,CAAC;gBAChB,MAAM,CAAC;YACT,CAAC;YACD,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YACjD,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAC/B;QACD,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;QACrC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC,IAAI,CAAC;YACzE,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBAChC,KAAK,EAAE,SAAS;gBAChB,QAAQ,EAAE,mEAAmE;gBAC7E,OAAO,EAAE,CAAC;wBACR,IAAI,EAAE,IAAI;wBACV,OAAO,EAAE,cAAQ,KAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;qBACvC,CAAC;aACH,CAAC,CAAC;YACH,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG;YACX,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBAChC,KAAK,EAAE,OAAO;gBACd,QAAQ,EAAE,GAAG;gBACb,OAAO,EAAE,CAAC,IAAI,CAAC;aAChB,CAAC,CAAC;YACH,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;IAEH,iBAAC;AAAD,CAAC;AA7FY,UAAU;IALtB,wEAAS,EAAE;IACX,wEAAS,CAAC;QACT,QAAQ,EAAE,aAAa;OACG;KAC3B,CAAC;yEAUyC;QACX,8FAAS;QACR,wEAAkB;QACnB,OAAe;AAiF9C;SA7FY,UAAU,e;;;;;;;;;;;;;;;;;;;;;;;AChBmB;AAC2C;AACR;AAC/B;AACA;AACL;AACzC;;;;;GAKG;AAOH,IAAa,SAAS;IASpB,mBAAmB,OAAsB,EAAE,QAAkB,EAC1C,SAAoB,EACpB,UAA8B,EAC9B,SAA0B;QAH7C,iBAUC;QAVkB,YAAO,GAAP,OAAO,CAAe;QACtB,cAAS,GAAT,SAAS,CAAW;QACpB,eAAU,GAAV,UAAU,CAAoB;QAC9B,cAAS,GAAT,SAAS,CAAiB;QAPtC,cAAS,GAAG,KAAK,CAAC;QAClB,gBAAW,GAAG,EAAE,CAAC;QAQtB,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;YACpB,KAAI,CAAC,IAAI,GAAG,EAAE,CAAC;YACf,KAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YAClB,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oCAAgB,GAAhB;QACE,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,2BAAO,GAAP;QAAA,iBAsCC;QArCC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,4BAA4B,CAAC;QAChD,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAElB,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI;YACvD,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,KAAI,CAAC,UAAU,CAAC,eAAe,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,OAAY;gBAChE,GAAG,EAAe,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO;oBAArB,IAAI,MAAM;oBACZ,EAAE,EAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,aAAa,CAAC,WAAW,EAAE,IAAI,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;wBACpH,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC;4BAChB,MAAM,EAAE,MAAM,CAAC,IAAI;4BACnB,MAAM,EAAE,MAAM,CAAC,IAAI;yBACpB,CAAC,CAAC;oBACL,CAAC;iBACF;gBACC,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACzB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG;gBACX,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,IAAI,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;oBAChC,KAAK,EAAE,OAAO;oBACd,QAAQ,EAAE,2BAA2B;oBACrC,OAAO,EAAE,CAAC,IAAI,CAAC;iBAChB,CAAC,CAAC;gBACH,KAAK,CAAC,OAAO,EAAE,CAAC;gBAChB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACzB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG;YACX,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBAChC,KAAK,EAAE,OAAO;gBACd,QAAQ,EAAE,2BAA2B;gBACrC,OAAO,EAAE,CAAC,IAAI,CAAC;aAChB,CAAC,CAAC;YACH,KAAK,CAAC,OAAO,EAAE,CAAC;YAChB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0BAAM,GAAN;QACE,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;IACrB,CAAC;IAED,gCAAY,GAAZ;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,kEAAU,EAAE;YAC5B,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,OAAO,EAAE,IAAI,CAAC,OAAO;SACtB,CAAC,CAAC;IACL,CAAC;IAED,gCAAY,GAAZ,UAAa,MAAM;QAAnB,iBAiBC;QAhBC,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC;YACzD,IAAI,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBAChC,KAAK,EAAE,SAAS;gBAChB,QAAQ,EAAE,0BAA0B;gBACpC,OAAO,EAAE,CAAC,IAAI,CAAC;aAChB,CAAC,CAAC;YACH,KAAK,CAAC,OAAO,EAAE,CAAC;YAChB,KAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG;YACX,IAAI,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBAChC,KAAK,EAAE,OAAO;gBACd,QAAQ,EAAE,GAAG;gBACb,OAAO,EAAE,CAAC,IAAI,CAAC;aAChB,CAAC,CAAC;YACH,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,8BAAU,GAAV,UAAW,MAAM;QACf,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,kEAAU,EAAE;YAC5B,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,GAAG,EAAE,MAAM;SACZ,CAAC,CAAC;IACL,CAAC;IAEH,gBAAC;AAAD,CAAC;AAtGY,SAAS;IALrB,wEAAS,EAAE;IACX,wEAAS,CAAC;QACT,QAAQ,EAAE,YAAY;OACG;KAC1B,CAAC;yEAU6D;QAC/B,8FAAS;QACR,wEAAkB;QACnB,MAAe;AA0F9C;SAtGY,SAAS,e;;;;;;;AClBtB;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,kC;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;;;;;;;;;;AC1B0C;AACqB;AACc;AACvB;AACX;AAEF;AAMzC,IAAa,QAAQ;IAQnB,kBAAmB,OAAsB,EAAC,QAAkB,EACzC,UAA8B,EAC9B,eAAsC,EACtC,SAA0B;QAH7C,iBAsBC;QAtBkB,YAAO,GAAP,OAAO,CAAe;QACtB,eAAU,GAAV,UAAU,CAAoB;QAC9B,oBAAe,GAAf,eAAe,CAAuB;QACtC,cAAS,GAAT,SAAS,CAAiB;QATtC,YAAO,GAAG,kDAAkD,CAAC;QAC7D,iBAAY,GAAG,CAAC,CAAC;QACjB,gBAAW,GAAG,EAAE,CAAC;QACjB,cAAS,GAAG,KAAK,CAAC;QAClB,WAAM,GAAG,EAAE,CAAC;QAOjB,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;YACpB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,KAAI,CAAC,WAAW,GAAG,2BAA2B,CAAC;YAC/C,KAAI,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,UAAC,GAAG;gBACnC,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC3C,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACzB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG;gBACX,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;oBAChC,KAAK,EAAE,OAAO;oBACd,QAAQ,EAAE,GAAG;oBACb,OAAO,EAAE,CAAC,IAAI,CAAC;iBAChB,CAAC,CAAC;gBACH,KAAK,CAAC,OAAO,EAAE,CAAC;YAClB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iCAAc,GAAd;QAAA,iBAiBC;QAhBC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,mBAAmB,CAAC;QACvC,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,EAAC,IAAI,CAAC,YAAY,CAAC;aACnE,IAAI,CAAC,UAAC,GAAG;YACR,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YAC3C,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG;YACT,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBAChC,KAAK,EAAE,OAAO;gBACd,QAAQ,EAAE,GAAG;gBACb,OAAO,EAAE,CAAC,IAAI,CAAC;aAChB,CAAC,CAAC;YACH,KAAK,CAAC,OAAO,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,8BAAW,GAAX;QAAA,iBAeC;QAdC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,kBAAkB,CAAC;QACtC,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC;aACrE,IAAI,CAAC,UAAC,GAAG;YACR,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG;YACX,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBAChC,KAAK,EAAE,OAAO;gBACd,QAAQ,EAAE,GAAG;gBACb,OAAO,EAAE,CAAC,IAAI,CAAC;aAChB,CAAC,CAAC;YACH,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC,CAAC;IACJ,CAAC;IAED,qCAAkB,GAAlB;QACE,IAAI,aAAa,GAAG,EAAE,CAAC;QACvB,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAS,OAAO;YAClC,aAAa,CAAC,IAAI,CAAC;gBACjB,IAAI,EAAE,OAAO;gBACb,OAAO,EAAE;oBACP,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACrB,CAAC;aACF,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,aAAa,CAAC,IAAI,CAAC;YACjB,IAAI,EAAE,QAAQ;YACd,IAAI,EAAE,QAAQ;YACd,IAAI,EAAE,OAAO;SACd,CAAC,CAAC;QACH,IAAI,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;YAC5C,KAAK,EAAE,kBAAkB;YACzB,OAAO,EAAE,aAAa;SACvB,CAAC,CAAC;QACH,WAAW,CAAC,OAAO,EAAE,CAAC;IACxB,CAAC;IAED,uBAAI,GAAJ,UAAK,OAAO;QACV,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,+DAAS,EAAE;YAC3B,SAAS,EAAE,OAAO;SACnB,CAAC,CAAC;IACL,CAAC;IAEH,eAAC;AAAD,CAAC;AAjGY,QAAQ;IAJpB,wEAAS,CAAC;QACT,QAAQ,EAAE,WAAW;OACG;KACzB,CAAC;uGAS4D;QAC7B,4EAAkB;QACb,wEAAqB;QAC3B,KAAe;AAsF9C;SAjGY,QAAQ,e;;;;;;;;ACZrB;AAAA;AAAA;AAA2E;AAElC;AAEzC,yGAAsB,EAAE,CAAC,eAAe,CAAC,8DAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJM;AACH;AACkB;AACd;AACN;AAEb;AACM;AACG;AACG;AACA;AACsB;AAC5B;AACH;AAsC3C,IAAa,SAAS;IAAtB;IAAwB,CAAC;IAAD,gBAAC;AAAD,CAAC;AAAZ,SAAS;IApCrB,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,6DAAK;YACL,kEAAQ;YACR,qEAAS;YACT,wEAAU;YACV,wEAAU;SACX;QACD,OAAO,EAAE;YACP,gFAAa;YACb,kEAAW,CAAC,OAAO,CAAC,6DAAK,EAAE,EAAE,EACjC;gBACE,KAAK,EAAE;oBACL,EAAE,YAAY,EAAE,gDAAgD,EAAE,IAAI,EAAE,YAAY,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE;oBAC9I,EAAE,YAAY,EAAE,gDAAgD,EAAE,IAAI,EAAE,YAAY,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE;oBAC9I,EAAE,YAAY,EAAE,6CAA6C,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE;iBAC1I;aACF,CAAC;YACE,kEAAU;SACX;QACD,SAAS,EAAE,CAAC,+DAAQ,CAAC;QACrB,eAAe,EAAE;YACf,6DAAK;YACL,kEAAQ;YACR,qEAAS;YACT,wEAAU;YACV,wEAAU;SACX;QACD,SAAS,EAAE;YACT,2EAAS;YACT,iFAAY;YACZ,EAAC,OAAO,EAAE,mEAAY,EAAE,QAAQ,EAAE,wEAAiB,EAAC;YACpD,+FAAkB;YAClB,qEAAM;SACP;KACF,CAAC;GACW,SAAS,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;ACnDoB;AACD;AACY;AACM;AAEb;AAI9C,IAAa,KAAK;IAGhB,eAAY,QAAkB,EAAE,SAAoB,EAAE,YAA0B;QAFhF,aAAQ,GAAO,kEAAQ,CAAC;QAGtB,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;YACpB,gEAAgE;YAChE,iEAAiE;YACjE,SAAS,CAAC,YAAY,EAAE,CAAC;YACzB,YAAY,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IACH,YAAC;AAAD,CAAC;AAXY,KAAK;IAHjB,wEAAS,CAAC;OACc;KACxB,CAAC;UAIgF;AAQjF;SAXY,KAAK,2B;;;;;;;;;;;;;;;;;;;;;;;;;ACTyB;AACoB;AAChC;AAC6B;AAC3B;AACjC;;;;;EAKE;AAEF,IAAa,kBAAkB;IAE7B,4BAAmB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAC7B,CAAC;IAED,yCAAY,GAAZ;QACE,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAC,MAAM;YAChC,IAAI,IAAI,GAAG,oBAAoB,CAAC;YAChC,IAAI,SAAS,GAAG,IAAI,oEAAM,EAAE,CAAC;YAC7B,SAAS,CAAC,MAAM,CAAC;gBACf,IAAI,EAAE,IAAI;gBACV,QAAQ,EAAE,SAAS;aACpB,CAAC,CAAC,IAAI,CAAC,UAAC,EAAgB;gBACvB,OAAO,CAAC,EAAE,CAAC,CAAC;YACd,CAAC,EAAE,UAAC,GAAG;gBACL,MAAM,CAAC,GAAG,CAAC,CAAC;YACd,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAID,sCAAS,GAAT;QAAA,iBAkBC;QAjBC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAC,MAAM;YAChC,KAAI,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,UAAC,EAAgB;gBACxC,EAAE,CAAC,UAAU,CAAC,wJAAwJ,EAAE,EAAE,CAAC;qBAC1K,IAAI,CAAC,UAAC,IAAI;oBACT,IAAI,iBAAiB,GAAG,EAAE,CAAC;oBAC3B,GAAG,EAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;wBACtC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;oBACrD,OAAO,CAAC,iBAAiB,CAAC,CAAC;gBAC7B,CAAC,CAAC;qBACD,KAAK,CAAC,UAAC,GAAG;oBACT,MAAM,CAAC,yCAAyC,CAAC,CAAC;gBACpD,CAAC,CAAC;YACJ,CAAC,CAAC;iBACD,KAAK,CAAC,UAAC,GAAG;gBACT,MAAM,CAAC,2CAA2C,CAAC,CAAC;YACtD,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAED,4CAAe,GAAf,UAAgB,OAAO;QAAvB,iBAkBC;QAjBC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAC,MAAM;YAChC,KAAI,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,UAAC,EAAgB;gBACxC,EAAE,CAAC,UAAU,CAAC,mCAAmC,GAAG,OAAO,GAAG,IAAI,EAAE,EAAE,CAAC;qBACtE,IAAI,CAAC,UAAC,IAAI;oBACT,IAAI,IAAI,GAAG,EAAE,CAAC;oBACd,GAAG,EAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;wBACtC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC/B,OAAO,CAAC,IAAI,CAAC,CAAC;gBAChB,CAAC,CAAC;qBACD,KAAK,CAAC,UAAC,GAAG;oBACT,MAAM,CAAC,yCAAyC,CAAC,CAAC;gBACpD,CAAC,CAAC,CAAC;YACL,CAAC,CAAC;iBACD,KAAK,CAAC,UAAC,GAAG;gBACT,MAAM,CAAC,2CAA2C,CAAC,CAAC;YACtD,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAED,6CAAgB,GAAhB,UAAiB,OAAO;QAAxB,iBAkBC;QAjBC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAC,MAAM;YAChC,KAAI,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,UAAC,EAAgB;gBACxC,EAAE,CAAC,UAAU,CAAC,gBAAgB,GAAG,OAAO,EAAE,EAAE,CAAC;qBAC5C,IAAI,CAAC,UAAC,IAAI;oBACT,IAAI,IAAI,GAAG,EAAE,CAAC;oBACd,GAAG,EAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;wBACtC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC/B,OAAO,CAAC,IAAI,CAAC,CAAC;gBAChB,CAAC,CAAC;qBACD,KAAK,CAAC,UAAC,GAAG;oBACT,MAAM,CAAC,sCAAsC,CAAC,CAAC;gBACjD,CAAC,CAAC,CAAC;YACL,CAAC,CAAC;iBACD,KAAK,CAAC,UAAC,GAAG;gBACT,MAAM,CAAC,2CAA2C,CAAC,CAAC;YACtD,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAEH,4CAAe,GAAf,UAAgB,OAAO,EAAE,OAAO,EAAE,MAAM;QAAxC,iBAqBC;QApBC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAC,MAAM;YAChC,IAAI,IAAI,GAAG,EAAE,CAAC;YACd,IAAI,IAAI,GAAG,EAAE,CAAC;YACd,GAAG,EAAY,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO;gBAAlB,IAAI,GAAG;gBACT,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC;gBAClB,IAAI,IAAI,IAAI,CAAC;aACd;YACD,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACvC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACvC,IAAI,KAAK,GAAG,cAAc,GAAG,OAAO,GAAG,IAAI,GAAG,IAAI,GAAG,UAAU,GAAG,IAAI,GAAG,IAAI,CAAC;YAC9E,KAAI,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,UAAC,EAAgB;gBACxC,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC;oBAChC,OAAO,EAAE,CAAC;gBACZ,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG;oBACX,MAAM,CAAC,wCAAwC,CAAC,CAAC;gBACnD,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG;gBACX,MAAM,CAAC,2CAA2C,CAAC,CAAC;YACtD,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAY,GAAZ,UAAa,OAAO,EAAE,OAAO,EAAE,MAAM;QAArC,iBAkBC;QAjBC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAC,MAAM;YAChC,IAAI,KAAK,GAAG,SAAS,GAAG,OAAO,GAAG,OAAO,CAAC;YAC1C,GAAG,EAAY,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO;gBAAlB,IAAI,GAAG;gBACT,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;aACtB;YACD,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAC1C,KAAK,IAAI,mBAAmB,CAAC;YAC7B,KAAI,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,UAAC,EAAgB;gBACxC,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC;oBAChC,OAAO,EAAE,CAAC;gBACZ,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG;oBACX,MAAM,CAAC,8BAA8B,CAAC,CAAC;gBACzC,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG;gBACX,MAAM,CAAC,2CAA2C,CAAC,CAAC;YACtD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4CAAe,GAAf,UAAgB,OAAO,EAAE,GAAG;QAA5B,iBAuBC;QAtBC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,EAAE,EAAC,GAAG,IAAI,IAAI,CAAC,EAAC;gBACd,IAAI,OAAK,GAAG,cAAc,GAAG,OAAO,GAAG,SAAS,CAAC;gBACjD,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,GAAG,CAAC,EAAC;oBACnB,OAAK,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;gBAC5C,CAAC;gBACD,OAAK,GAAG,OAAK,CAAC,MAAM,CAAC,CAAC,EAAE,OAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAC1C,OAAK,IAAI,GAAG,CAAC;gBACb,KAAI,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,UAAC,EAAgB;oBACxC,EAAE,CAAC,UAAU,CAAC,OAAK,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC;wBAC5B,OAAO,EAAE,CAAC;oBACZ,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG;wBACX,MAAM,CAAC,yCAAyC,CAAC,CAAC;oBACpD,CAAC,CAAC;gBACJ,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG;oBACX,MAAM,CAAC,2CAA2C,CAAC,CAAC;gBACtD,CAAC,CAAC,CAAC;YACL,CAAC;YACD,IAAI,EAAC;gBACH,MAAM,CAAC,mBAAmB,CAAC,CAAC;YAC9B,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAID,aAAa;IAEX,sDAAyB,GAAzB,UAA0B,OAAO,EAAE,OAAO;QAA1C,iBAUC;QATC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,IAAI,GAAG,GAAG,OAAO,GAAG,YAAY,GAAG,OAAO,CAAC;YAC3C,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;iBACjB,SAAS,CAAC;gBACT,OAAO,EAAE,CAAC;YACZ,CAAC,EAAE,UAAC,GAAG;gBACL,MAAM,CAAC,6CAA6C,CAAC,CAAC;YACxD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2DAA8B,GAA9B,UAA+B,OAAO,EAAE,OAAO;QAA/C,iBAUC;QATC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,IAAI,GAAG,GAAG,OAAO,GAAG,eAAe,GAAG,OAAO,CAAC;YAC9C,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;iBACjB,SAAS,CAAC;gBACT,OAAO,EAAE,CAAC;YACZ,CAAC,EAAE,UAAC,GAAG;gBACL,MAAM,CAAC,iDAAiD,CAAC,CAAC;YAC5D,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iDAAoB,GAApB,UAAqB,OAAO,EAAE,YAAY;QAA1C,iBAoCC;QAnCC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAC,MAAM;YAChC,IAAI,GAAG,GAAG,OAAO,GAAG,wBAAwB,GAAG,YAAY,CAAC;YAC5D,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;iBACf,SAAS,CAAC,UAAC,GAAG;gBACb,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;gBACtB,KAAI,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,UAAC,EAAgB;oBACxC,EAAE,CAAC,WAAW,CAAC,UAAC,EAAO;wBACrB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;6BACd,IAAI,EAAE;6BACN,OAAO,CAAC,UAAS,CAAC,EAAC,CAAC;4BACnB,EAAE,EAAC,CAAC,KAAK,CAAC,CAAC,EAAC;gCACV,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,EAAE,EAAE,UAAU,WAAW,EAAE,MAAM;oCACrD,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;gCAC9C,CAAC,EAAE,UAAU,WAAW,EAAE,KAAK;oCAC7B,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC,OAAO,GAAG,SAAS,GAAG,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC;gCACnF,CAAC,CAAC,CAAC;4BACL,CAAC;wBACH,CAAC,CAAC,CAAC;oBACP,CAAC,CAAC;yBACD,IAAI,CAAC,UAAC,GAAG;wBACR,KAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,UAAC,IAAI;4BACzB,OAAO,CAAC,IAAI,CAAC,CAAC;wBAChB,CAAC,CAAC;6BACD,KAAK,CAAC,UAAC,GAAG;4BACT,MAAM,CAAC,sCAAsC,CAAC,CAAC;wBACjD,CAAC,CAAC,CAAC;oBACL,CAAC,CAAC;yBACD,KAAK,CAAC,UAAC,GAAG;wBACT,MAAM,CAAC,wCAAwC,CAAC,CAAC;oBACnD,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;YACL,CAAC,EAAE,UAAC,GAAG;gBACL,MAAM,CAAC,6BAA6B,CAAC,CAAC;YACxC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,kDAAqB,GAArB,UAAsB,OAAO,EAAE,YAAY;QAA3C,iBAkCC;QAjCC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAC,MAAM;YAChC,KAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC,IAAI,CAAC;gBAChD,KAAI,CAAC,kBAAkB,EAAE,CAAC,IAAI,CAAC;oBAC7B,KAAI,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,UAAC,EAAgB;wBACxC,IAAI,MAAM,GAAG,EAAE,CAAC;wBAChB,EAAE,CAAC,UAAU,CAAC,0FAA0F,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;4BACxH,GAAG,EAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;gCACxC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,WAAW,EAAE,KAAK,aAAa,CAAC,WAAW,EAAE,CAAC;oCAC7E,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;4BAE5C,IAAI,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,aAAG;gCAC3B,MAAM,CAAC,KAAI,CAAC,wBAAwB,CAAC,OAAO,EAAE,YAAY,EAAE,GAAG,CAAC,CAAC;4BACnE,CAAC,CAAC,CAAC;4BACL,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC;gCACzB,OAAO,CAAC,QAAQ,CAAC,CAAC;4BACpB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG;gCACX,MAAM,CAAC,GAAG,CAAC,CAAC;4BACd,CAAC,CAAC;wBAEJ,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG;4BACX,MAAM,CAAC,iDAAiD,CAAC,CAAC;wBAC5D,CAAC,CAAC,CAAC;oBACL,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG;wBACX,MAAM,CAAC,2CAA2C,CAAC,CAAC;oBACtD,CAAC,CAAC;gBAEJ,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG;oBACX,MAAM,CAAC,GAAG,CAAC,CAAC;gBACd,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG;gBACX,MAAM,CAAC,GAAG,CAAC,CAAC;YACd,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAID,6CAAgB,GAAhB,UAAiB,OAAO,EAAE,YAAY;QAAtC,iBAoFC;QAnFC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAC,MAAM;YAChC,IAAI,OAAO,GAAG,EAAE,CAAC;YACjB,IAAI,OAAO,GAAG,EAAE,CAAC;YACjB,IAAI,MAAM,GAAG,EAAE,CAAC;YAChB,KAAI,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,UAAC,EAAe;gBACvC,IAAI,eAAe,GAAG,kHAAkH,CAAC;gBACzI,EAAE,CAAC,UAAU,CAAC,eAAe,EAAE,EAAE,CAAC;qBAC/B,IAAI,CAAC,UAAC,MAAM;oBACX,GAAG,EAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;wBACxC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;oBAE5C,OAAO,IAAI,gFAAgF,CAAC;oBAE5F,GAAG,EAAkB,UAAM,EAAN,iBAAM,EAAN,oBAAM,EAAN,IAAM;wBAAvB,IAAI,SAAS;wBACf,EAAE,EAAC,SAAS,CAAC,WAAW,EAAE,KAAK,aAAa,CAAC,WAAW,EAAE,CAAC,EAAC;4BAC1D,OAAO,CAAC,IAAI,CAAC;gCACX,QAAQ,EAAE,gBAAgB,GAAG,SAAS,GAAG,uBAAuB;gCAChE,QAAQ,EAAE,gBAAgB,GAAG,SAAS,GAAG,+CAA+C;gCACxF,OAAO,EAAE,SAAS;6BACnB,CAAC,CAAC;wBACL,CAAC;qBACF;oBAED,EAAE,CAAC,WAAW,CAAC,UAAS,EAAE;gDAChB,KAAK;4BACX,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,EAC5B,UAAS,EAAE,EAAE,MAAM;gCACjB,OAAO,IAAI,WAAW,GAAG,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;gCAC7C,OAAO,IAAI,OAAO,CAAC;gCACnB,GAAG,EAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC,CAAC;oCAC1C,OAAO,IAAI,KAAK,CAAC;oCACjB,GAAG,EAAC,IAAI,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wCACjC,EAAE,EAAC,GAAG,CAAC,WAAW,EAAE,KAAK,aAAa,CAAC,WAAW,EAAE,CAAC;4CACnD,OAAO,IAAI,GAAG,GAAG,GAAG,GAAG,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,OAAO,GAAG,GAAG,GAAG,GAAG,CAAC;oCACzF,OAAO,IAAI,MAAM,CAAC;gCACpB,CAAC;gCACD,OAAO,IAAI,QAAQ,CAAC;4BACtB,CAAC,EAAE,IAAI,CAAC,CAAC;4BACX,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,EAC5B,UAAS,EAAE,EAAE,MAAM;gCACjB,OAAO,IAAI,OAAO,CAAC;gCACnB,GAAG,EAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC,CAAC;oCAC1C,OAAO,IAAI,KAAK,CAAC;oCACjB,GAAG,EAAC,IAAI,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wCACjC,EAAE,EAAC,GAAG,CAAC,WAAW,EAAE,KAAK,aAAa,CAAC,WAAW,EAAE,CAAC;4CACnD,OAAO,IAAI,GAAG,GAAG,GAAG,GAAG,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,OAAO,GAAG,GAAG,GAAG,GAAG,CAAC;oCACzF,OAAO,IAAI,MAAM,CAAC;gCACpB,CAAC;gCACD,OAAO,IAAI,cAAc,CAAC;4BAC5B,CAAC,EAAE,IAAI,CAAC,CAAC;wBACb,CAAC;wBA1BD,GAAG,EAAc,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO;4BAApB,IAAI,KAAK;oCAAL,KAAK;yBA0BZ;oBACH,CAAC,CAAC,CAAC,IAAI,CAAC;wBACN,EAAE,CAAC,UAAU,CAAC,wCAAwC,EAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;4BACrE,OAAO,IAAI,UAAU,CAAC;4BACtB,GAAG,EAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;gCACxC,OAAO,IAAI,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,WAAW,CAAC;4BACnH,OAAO,IAAI,sBAAsB,CAAC;4BAClC,IAAI,GAAG,GAAG,OAAO,GAAG,OAAO,CAAC;4BAC5B,IAAI,OAAO,GAAG,IAAI,8DAAO,CAAC;gCACxB,cAAc,EAAE,kBAAkB;6BACnC,CAAC,CAAC;4BACH,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;4BACrD,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;gCACxB,YAAY,EAAE,YAAY;gCAC1B,SAAS,EAAE,OAAO;gCAClB,SAAS,EAAE,GAAG;6BACf,CAAC,CAAC;4BACH,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,CAAC;iCAC/B,SAAS,CAAC;gCACT,OAAO,EAAE,CAAC;4BACZ,CAAC,EAAE,UAAC,GAAG;gCACL,MAAM,CAAC,8CAA8C,CAAC,CAAC;4BACzD,CAAC,CAAC;wBACN,CAAC,CAAC,CAAC;oBACL,CAAC,CAAC,CAAC;gBAEL,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG;oBACb,MAAM,CAAC,iDAAiD,CAAC,CAAC;gBAC1D,CAAC,CAAC;YACN,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG;gBACX,MAAM,CAAC,qCAAqC,CAAC,CAAC;YAChD,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+CAAkB,GAAlB;QAAA,iBAyCC;QAxCC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAC,MAAM;YAChC,IAAI,KAAK,GAAG,+EAA+E,CAAC;YAC5F,IAAI,MAAM,GAAG,EAAE,CAAC;YAChB,KAAI,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,UAAC,EAAgB;gBACxC,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;oBACnC,GAAG,EAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;wBACxC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;oBAC5C,EAAE,CAAC,WAAW,CAAC,UAAS,EAAE;gDAChB,OAAO;4BACb,EAAE,EAAC,OAAO,CAAC,WAAW,EAAE,KAAK,eAAe,CAAC,WAAW,EAAE,CAAC,EAAC;gCAC1D,EAAE,CAAC,UAAU,CAAC,+DAA+D,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;4BACjG,CAAC;4BACD,EAAE,EAAC,OAAO,CAAC,WAAW,EAAE,KAAK,aAAa,CAAC,WAAW,EAAE,IAAI,OAAO,CAAC,WAAW,EAAE,KAAK,eAAe,CAAC,WAAW,EAAE,CAAC,EAAC;gCACnH,KAAK,GAAG,kFAAkF,GAAG,OAAO,GAAG,GAAG,CAAC;gCAC3G,IAAI,eAAa,GAAG,IAAI,CAAC;gCACzB,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,EAAE,EACrB,UAAS,WAAW,EAAE,MAAM;oCAC1B,eAAa,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oCACvC,EAAE,CAAC,CAAC,eAAa,IAAI,IAAI,CAAC,EAAC;wCACzB,EAAE,CAAC,UAAU,CAAC,6BAA6B,GAAG,OAAO,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;wCACvE,EAAE,CAAC,UAAU,CAAC,SAAS,GAAG,OAAO,GAAG,2CAA2C,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;wCACjG,EAAE,CAAC,UAAU,CAAC,eAAa,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;oCAC/C,CAAC;gCACH,CAAC,EAAE,UAAS,WAAW,EAAE,KAAK;gCAChC,CAAC,CAAC,CAAC;4BACL,CAAC;wBACH,CAAC;wBAlBD,GAAG,EAAgB,UAAM,EAAN,iBAAM,EAAN,oBAAM,EAAN,IAAM;4BAArB,IAAI,OAAO;oCAAP,OAAO;yBAkBd;wBACD,EAAE,CAAC,UAAU,CAAC,0BAA0B,EAAC,EAAE,EAAC,IAAI,EAAC,IAAI,CAAC,CAAC;oBACzD,CAAC,CAAC,CAAC,IAAI,CAAC;wBACN,OAAO,EAAE,CAAC;oBACZ,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG;wBACX,MAAM,CAAC,oCAAoC,CAAC,CAAC;oBAC/C,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG;oBACb,MAAM,CAAC,iDAAiD,CAAC,CAAC;gBAC1D,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG;gBACX,MAAM,CAAC,qCAAqC,CAAC,CAAC;YAChD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,qDAAwB,GAAxB,UAAyB,OAAO,EAAE,YAAY,EAAE,SAAS;QAAzD,iBAgEC;QA/DC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,IAAI,GAAG,GAAG,OAAO,GAAG,QAAQ,GAAG,YAAY,GAAG,GAAG,GAAG,SAAS,CAAC;YAC9D,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,EAAE,EAAX,CAAW,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;gBACzD,KAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;oBAChD,IAAI,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;oBAC1D,EAAE,EAAC,gBAAgB,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;wBAClC,KAAI,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,UAAC,EAAgB;4BACxC,EAAE,CAAC,WAAW,CAAC,UAAS,EAAE;gCACxB,EAAE,EAAC,gBAAgB,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC,EAAC;oCAChD,EAAE,CAAC,UAAU,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;gCACpE,CAAC;gCACD,EAAE,EAAC,gBAAgB,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC,EAAC;oCAChD,EAAE,CAAC,UAAU,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;gCACpE,CAAC;gCACD,EAAE,EAAC,gBAAgB,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC,EAAC;oCAChD,EAAE,CAAC,UAAU,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;gCACpE,CAAC;gCACD,GAAG,EAAe,UAAwB,EAAxB,qBAAgB,CAAC,OAAO,EAAxB,cAAwB,EAAxB,IAAwB;oCAAtC,IAAI,MAAM;oCACZ,MAAM,EAAC,MAAM,CAAC,MAAM,CAAC,EAAC;wCACpB,KAAK,GAAG;4CACN,EAAE,CAAC,UAAU,CAAC,gBAAgB,CAAC,WAAW,EAAE,MAAM,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;4CACxE,KAAK,CAAC;wCACR,KAAK,GAAG;4CACN,EAAE,CAAC,UAAU,CAAC,gBAAgB,CAAC,WAAW,EAAE,MAAM,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;4CACxE,KAAK,CAAC;wCACR,KAAK,GAAG;4CACN,EAAE,CAAC,UAAU,CAAC,gBAAgB,CAAC,WAAW,GAAG,GAAG,EAAE,MAAM,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;4CAC9E,KAAK,CAAC;oCACV,CAAC;iCACF;gCAED,EAAE,EAAC,gBAAgB,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,EAAC;oCAC1C,EAAE,CAAC,UAAU,CAAC,gBAAgB,CAAC,aAAa,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;gCAClE,CAAC;gCACD,EAAE,EAAC,gBAAgB,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,EAAC;oCAC1C,EAAE,CAAC,UAAU,CAAC,gBAAgB,CAAC,aAAa,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;gCAClE,CAAC;gCACD,EAAE,EAAC,gBAAgB,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,EAAC;oCAC1C,EAAE,CAAC,UAAU,CAAC,gBAAgB,CAAC,aAAa,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;gCAClE,CAAC;4BAEH,CAAC,CAAC,CAAC,IAAI,CAAC;gCACN,KAAI,CAAC,sBAAsB,CAAC,OAAO,EAAE,gBAAgB,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC;oCACjE,OAAO,EAAE,CAAC;gCACZ,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG;oCACX,MAAM,CAAC,GAAG,CAAC,CAAC;gCACd,CAAC,CAAC,CAAC;4BACL,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG;gCACX,MAAM,CAAC,gCAAgC,CAAC,CAAC;4BAC3C,CAAC,CAAC,CAAC;wBACL,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG;4BACX,MAAM,CAAC,qCAAqC,CAAC,CAAC;wBAChD,CAAC,CAAC,CAAC;oBACL,CAAC;oBACD,IAAI,EAAC;wBACH,OAAO,EAAE,CAAC;oBACZ,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,EAAE,UAAC,GAAG;gBACL,MAAM,CAAC,mCAAmC,CAAC,CAAC;YAC9C,CAAC,CAAC;QAEJ,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mDAAsB,GAAtB,UAAuB,OAAO,EAAE,MAAM;QAAtC,iBAUC;QARC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,IAAI,GAAG,GAAG,OAAO,GAAG,cAAc,GAAG,MAAM,CAAC;YAC5C,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC;gBAC3B,OAAO,EAAE,CAAC;YACZ,CAAC,EAAE,UAAC,GAAG;gBACL,MAAM,CAAC,uCAAuC,CAAC,CAAC;YAClD,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAED,uDAA0B,GAA1B,UAA2B,IAAI;QAC7B,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO;YACzB,IAAI,gBAAgB,GAAG;gBACrB,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM;gBACtB,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS;gBAC5B,OAAO,EAAE,EAAE;gBACX,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW;gBAChC,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW;gBAChC,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW;gBAChC,aAAa,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,aAAa;gBACpC,aAAa,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,aAAa;gBACpC,aAAa,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,aAAa;gBACpC,iBAAiB,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,iBAAiB;gBAC5C,iBAAiB,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,iBAAiB;gBAC5C,iBAAiB,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,iBAAiB;aAC7C;YAED,mDAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,UAAU,GAAG,EAAE,MAAM;gBACvD,EAAE,EAAC,MAAM,IAAI,MAAM,CAAC,OAAO,CAAC,EAAC;oBAC3B,GAAG,EAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC,CAAC;wBAC/C,IAAI,MAAM,GAAG;4BACX,MAAM,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC/B,OAAO,EAAE,EAAE;yBACZ,CAAC;wBACF,GAAG,EAAC,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,EAAE,EAAE,EAAC,CAAC;4BACvD,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;wBACjD,CAAC;wBACD,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACxC,CAAC;oBACD,OAAO,CAAC,gBAAgB,CAAC,CAAC;gBAC5B,CAAC;gBACD,IAAI,EAAC;oBACH,OAAO,CAAC,gBAAgB,CAAC,CAAC;gBAC5B,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;IACJ,CAAC;IAIH,yBAAC;AAAD,CAAC;AAvfY,kBAAkB;IAD9B,yEAAU,EAAE;qCAGc,2DAAI;GAFlB,kBAAkB,CAuf9B;AAvf8B","file":"main.js","sourcesContent":["import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, AlertController } from 'ionic-angular';\nimport { SqliteSyncProvider } from '../../providers/sqlite-sync/sqlite-sync';\n/**\n * Generated class for the InsertPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-insert',\n  templateUrl: 'insert.html',\n})\nexport class InsertPage {\n\n  public tbl_name;\n  public columns;\n  public insertModel: any;\n  public isLoading = false;\n  public loadingText = \"\";\n\n  constructor(public navCtrl: NavController,\n              public navParams: NavParams,\n              public sqliteSync: SqliteSyncProvider,\n              public alertCtrl: AlertController)\n  {\n    this.insertModel = {};\n    this.tbl_name = this.navParams.get('tblName');\n    this.columns = this.navParams.get('columns');\n    for(let column of this.columns){\n      column.inputType = this.getType(column.type);\n    }\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad InsertPage');\n  }\n\n  backToTable(){\n    this.navCtrl.pop();\n  }\n\n  getType(type){\n    switch(type.toLowerCase()){\n      case 'string':\n        return 'text';\n      case 'number':\n      case 'integer':\n        return 'number';\n      default:\n        return 'text';\n    }\n  }\n\n  insertRecord(){\n    this.isLoading = true;\n    this.loadingText = \"Inserting into table...\";\n    let columnNames = [];\n    let columnValues = [];\n    for(let column of this.columns){\n      if(this.insertModel[column.name] == null){\n        this.isLoading = false;\n        let alert = this.alertCtrl.create({\n          title: \"Empty fields\",\n          subTitle: \"Please fill all fields correctly.\",\n          buttons: [\"OK\"]\n        });\n        alert.present();\n        return;\n      }\n      columnValues.push(this.insertModel[column.name]);\n      columnNames.push(column.name);\n    }\n    this.sqliteSync.insertIntoTable(this.tbl_name, columnNames, columnValues).then(() => {\n      this.isLoading = false;\n      let alert = this.alertCtrl.create({\n        title: \"Success\",\n        subTitle: \"Row has been inserted correctly. You'll be moved to previous page.\",\n        buttons: [{\n          text: \"OK\",\n          handler: () => { this.navCtrl.pop(); }\n        }]\n      });\n      alert.present();\n    }).catch((err) => {\n      this.isLoading = false;\n      let alert = this.alertCtrl.create({\n        title: \"Error\",\n        subTitle: err,\n        buttons: [\"OK\"]\n      });\n      alert.present();\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/insert/insert.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, AlertController } from 'ionic-angular';\nimport { SqliteSyncProvider } from '../../providers/sqlite-sync/sqlite-sync';\n\n/**\n * Generated class for the UpdatePage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-update',\n  templateUrl: 'update.html',\n})\nexport class UpdatePage {\n\n  public tblName;\n  public columns;\n  public row;\n  public insertModel: any;\n  public isLoading = false;\n  public loadingText = \"\";\n\n  constructor(public navCtrl: NavController,\n              public navParams: NavParams,\n              public sqliteSync: SqliteSyncProvider,\n              public alertCtrl: AlertController)\n  {\n    this.insertModel = {};\n    this.columns = [];\n    this.tblName = this.navParams.get('tblName');\n    this.row = this.navParams.get('row');\n    for(let prop in this.row){\n      if(prop.toLowerCase() !== \"MergeUpdate\".toLowerCase() && prop.toLowerCase() !== \"RowId\".toLowerCase()){\n        this.columns.push({\n          name: prop,\n          inputType: this.getType(typeof(this.row[prop]))\n        });\n        this.insertModel[prop] = this.row[prop];\n      }\n    }\n    console.log(JSON.stringify(this.columns));\n    console.log(JSON.stringify(this.insertModel));\n\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad UpdatePage');\n  }\n\n  getType(type){\n    switch(type){\n      case 'string':\n        return 'text';\n      case 'number':\n        return 'number';\n      default:\n        return 'text';\n    }\n  }\n\n  backToTable(){\n    this.navCtrl.pop();\n  }\n\n  updateRecord(){\n    this.isLoading = true;\n    this.loadingText = \"Updating record...\";\n    let columnNames = [];\n    let columnValues = [];\n    for(let column of this.columns){\n      if(this.insertModel[column.name] == null){\n        this.isLoading = false;\n        let alert = this.alertCtrl.create({\n          title: \"Empty fields\",\n          subTitle: \"Please fill all fields correctly.\",\n          buttons: [\"OK\"]\n        });\n        alert.present();\n        return;\n      }\n      columnValues.push(this.insertModel[column.name]);\n      columnNames.push(column.name);\n    }\n    columnValues.push(this.row[\"RowId\"]);\n    this.sqliteSync.updateRecord(this.tblName, columnNames, columnValues).then(() => {\n      this.isLoading = false;\n      let alert = this.alertCtrl.create({\n        title: \"Success\",\n        subTitle: \"Row has been updated correctly. You'll be moved to previous page.\",\n        buttons: [{\n          text: \"OK\",\n          handler: () => { this.navCtrl.pop(); }\n        }]\n      });\n      alert.present();\n    }).catch((err) => {\n      this.isLoading = false;\n      let alert = this.alertCtrl.create({\n        title: \"Error\",\n        subTitle: err,\n        buttons: [\"OK\"]\n      });\n      alert.present();\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/update/update.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, AlertController } from 'ionic-angular';\nimport { SqliteSyncProvider } from '../../providers/sqlite-sync/sqlite-sync';\nimport { InsertPage } from '../insert/insert';\nimport { UpdatePage } from '../update/update';\nimport { Platform } from 'ionic-angular';\n/**\n * Generated class for the TablePage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-table',\n  templateUrl: 'table.html',\n})\nexport class TablePage {\n\n  public rows;\n  public columns;\n  public tblName;\n  public isLoading = false;\n  public loadingText = \"\";\n\n\n  constructor(public navCtrl: NavController, platform: Platform,\n              public navParams: NavParams,\n              public sqliteSync: SqliteSyncProvider,\n              public alertCtrl: AlertController)\n  {\n    platform.ready().then(() => {\n      this.rows = [];\n      this.columns = [];\n      this.tblName = this.navParams.get('tblName');\n    });\n  }\n\n  ionViewWillEnter(){\n    this.getData();\n  }\n\n  getData(){\n    this.isLoading = true;\n    this.loadingText = \"Getting data from table...\";\n    this.rows = [];\n    this.columns = [];\n\n    this.sqliteSync.getDataFromTable(this.tblName).then((data) => {\n      this.rows = data;\n      this.sqliteSync.getTableColumns(this.tblName).then((columns: any) => {\n      for(let column of columns) {\n        if(column.name.toLowerCase() !== \"MergeUpdate\".toLowerCase() && column.name.toLowerCase() !== \"RowId\".toLowerCase()) {\n          this.columns.push({\n            'name': column.name,\n            'type': column.type\n          });\n        }\n      }\n        this.isLoading = false;\n      }).catch((err) => {\n        console.log(err);\n        let alert = this.alertCtrl.create({\n          title: \"Error\",\n          subTitle: \"Error while loading data.\",\n          buttons: [\"OK\"]\n        });\n        alert.present();\n        this.isLoading = false;\n      });\n    }).catch((err) => {\n      this.isLoading = false;\n      let alert = this.alertCtrl.create({\n        title: \"Error\",\n        subTitle: \"Error while loading data.\",\n        buttons: [\"OK\"]\n      });\n      alert.present();\n      console.log(err);\n    });\n  }\n\n  goBack(){\n    this.navCtrl.pop();\n  }\n\n  insertRecord(){\n    this.navCtrl.push(InsertPage, {\n      tblName: this.tblName,\n      columns: this.columns\n    });\n  }\n\n  deleteRecord(object){\n    this.sqliteSync.deleteFromTable(this.tblName, object).then(() => {\n      let alert = this.alertCtrl.create({\n        title: \"Success\",\n        subTitle: \"Record has been deleted.\",\n        buttons: [\"OK\"]\n      });\n      alert.present();\n      this.getData();\n    }).catch((err) => {\n      let alert = this.alertCtrl.create({\n        title: \"Error\",\n        subTitle: err,\n        buttons: [\"OK\"]\n      });\n      alert.present();\n    });\n  }\n\n  editRecord(object){\n    this.navCtrl.push(UpdatePage, {\n      tblName: this.tblName,\n      row: object\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/table/table.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 137;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 137\n// module chunks = 3","var map = {\n\t\"../pages/insert/insert.module\": [\n\t\t320,\n\t\t2\n\t],\n\t\"../pages/table/table.module\": [\n\t\t322,\n\t\t1\n\t],\n\t\"../pages/update/update.module\": [\n\t\t321,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 179;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 179\n// module chunks = 3","import { Component } from '@angular/core';\nimport { NavController, AlertController } from 'ionic-angular';\nimport { SqliteSyncProvider } from '../../providers/sqlite-sync/sqlite-sync';\nimport { ActionSheetController } from 'ionic-angular';\nimport { TablePage } from '../table/table';\n\nimport { Platform } from 'ionic-angular';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n\n  public syncUrl = \"https://one-million-demo.ampliapps.com/sync/API3\";\n  public subscriberId = 1;\n  public loadingText = \"\";\n  public isLoading = false;\n  public tables = [];\n\n  constructor(public navCtrl: NavController,platform: Platform,\n              public sqliteSync: SqliteSyncProvider,\n              public actionSheetCtrl: ActionSheetController,\n              public alertCtrl: AlertController)\n  {\n    platform.ready().then(() => {\n      this.isLoading = true;\n      this.loadingText = \"Connecting to database...\";\n      this.sqliteSync.getTables().then((res) => {\n        let data = JSON.parse(JSON.stringify(res));\n        this.tables = data;\n        this.isLoading = false;\n      }).catch((err) => {\n        this.isLoading = false;\n        let alert = this.alertCtrl.create({\n          title: \"Error\",\n          subTitle: err,\n          buttons: [\"OK\"]\n        });\n        alert.present();\n      });\n    });\n  }\n\n  reinitializeDB(){\n    this.isLoading = true;\n    this.loadingText = \"Reinitializing...\";\n    this.sqliteSync.InitializeSubscriber(this.syncUrl,this.subscriberId)\n    .then((res) => {\n      let data = JSON.parse(JSON.stringify(res));\n      this.tables = data;\n      this.isLoading = false;\n    }).catch((err) => {\n        this.isLoading = false;\n        let alert = this.alertCtrl.create({\n          title: \"Error\",\n          subTitle: err,\n          buttons: [\"OK\"]\n        });\n        alert.present();\n    });\n  }\n\n  synchronize(){\n    this.isLoading = true;\n    this.loadingText = \"Synchronizing...\";\n    this.sqliteSync.SynchronizeSubscriber(this.syncUrl, this.subscriberId)\n    .then((res) => {\n      this.isLoading = false;\n    }).catch((err) => {\n      this.isLoading = false;\n      let alert = this.alertCtrl.create({\n        title: \"Error\",\n        subTitle: err,\n        buttons: [\"OK\"]\n      });\n      alert.present();\n    })\n  }\n\n  presentActionSheet(){\n    let buttons_array = [];\n    let self = this;\n    this.tables.forEach(function(tblName){\n      buttons_array.push({\n        text: tblName,\n        handler: () => {\n          self.show(tblName);\n        }\n      });\n    });\n    buttons_array.push({\n      text: 'Cancel',\n      role: 'cancel',\n      icon: 'close'\n    });\n    let actionSheet = this.actionSheetCtrl.create({\n      title: \"SELECT * FROM...\",\n      buttons: buttons_array\n    });\n    actionSheet.present();\n  }\n\n  show(tblName){\n    this.navCtrl.push(TablePage, {\n      'tblName': tblName\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport { TablePage } from '../pages/table/table';\nimport { InsertPage } from '../pages/insert/insert';\nimport { UpdatePage } from '../pages/update/update';\nimport { SqliteSyncProvider } from '../providers/sqlite-sync/sqlite-sync';\nimport { SQLite } from '@ionic-native/sqlite';\nimport { HttpModule } from '@angular/http';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage,\n    TablePage,\n    InsertPage,\n    UpdatePage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp, {}, \n{\n  links: [\n    { loadChildren: '../pages/insert/insert.module#InsertPageModule', name: 'InsertPage', segment: 'insert', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/update/update.module#UpdatePageModule', name: 'UpdatePage', segment: 'update', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/table/table.module#TablePageModule', name: 'TablePage', segment: 'table', priority: 'low', defaultHistory: [] }\n  ]\n}),\n    HttpModule\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage,\n    TablePage,\n    InsertPage,\n    UpdatePage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    SqliteSyncProvider,\n    SQLite\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = HomePage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions  } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { SQLite, SQLiteObject } from '@ionic-native/sqlite';\nimport * as xml2js from \"xml2js\";\n/*\n  Generated class for the SqliteSyncProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class SqliteSyncProvider {\n\n  constructor(public http: Http) {\n  }\n\n  openDatabase(){\n    return new Promise((resolve,reject) => {\n      let name = \"sqlitesynccom_demo\";\n      let sqlite_db = new SQLite();\n      sqlite_db.create({\n        name: name,\n        location: 'default'\n      }).then((db: SQLiteObject) => {\n        resolve(db);\n      }, (err) => {\n        reject(err);\n      });\n    });\n  }\n\n\n  \n  getTables(){\n    return new Promise((resolve,reject) => {\n      this.openDatabase().then((db: SQLiteObject) => {\n        db.executeSql(\"SELECT tbl_name FROM sqlite_master WHERE type='table' AND tbl_name != 'android_metadata' AND tbl_name != 'MergeDelete' AND tbl_name != 'MergeIdentity'\", {})\n        .then((data) => {\n          let sqlitesync_tables = [];\n          for(let i = 0; i < data.rows.length; i++)\n            sqlitesync_tables.push(data.rows.item(i).tbl_name);\n          resolve(sqlitesync_tables);\n        })\n        .catch((err) => {\n          reject(\"Error while getting data from database!\");\n        })\n      })\n      .catch((err) => {\n        reject(\"Error while connecting to local database!\");\n      })\n    })\n  }\n\n  getTableColumns(tblName) {\n    return new Promise((resolve,reject) => {\n      this.openDatabase().then((db: SQLiteObject) => {\n        db.executeSql(\"SELECT * FROM pragma_table_info('\" + tblName + \"')\", [])\n        .then((data) => {\n          let rows = [];\n          for(let i = 0; i < data.rows.length; i++)\n            rows.push(data.rows.item(i));\n          resolve(rows);\n        })\n        .catch((err) => {\n          reject(\"Error while getting data from database!\");\n        });\n      })\n      .catch((err) => {\n        reject(\"Error while connecting to local database!\");\n      })\n    })\n  }\n\n  getDataFromTable(tblName){\n    return new Promise((resolve,reject) => {\n      this.openDatabase().then((db: SQLiteObject) => {\n        db.executeSql(\"SELECT * FROM \" + tblName, [])\n        .then((data) => {\n          let rows = [];\n          for(let i = 0; i < data.rows.length; i++)\n            rows.push(data.rows.item(i));\n          resolve(rows);\n        })\n        .catch((err) => {\n          reject(\"Error while getting data from table!\");\n        });\n      })\n      .catch((err) => {\n        reject(\"Error while connecting to local database!\");\n      })\n    })\n  }\n\ninsertIntoTable(tblName, columns, values){\n  return new Promise((resolve,reject) => {\n    let cols = '';\n    let vars = '';\n    for(let col of columns){\n      cols += col + \",\";\n      vars += \"?,\";\n    }\n    cols = cols.substr(0, cols.length - 1);\n    vars = vars.substr(0, vars.length - 1);\n    let query = \"INSERT INTO \" + tblName + \" (\" + cols + \")VALUES(\" + vars + \");\";\n    this.openDatabase().then((db: SQLiteObject) => {\n      db.executeSql(query, values).then(() => {\n        resolve();\n      }).catch((err) => {\n        reject(\"Error while inserting record to table!\");\n      });\n    }).catch((err) => {\n      reject(\"Error while connecting to local database!\");\n    })\n  });\n}\n\nupdateRecord(tblName, columns, values){\n  return new Promise((resolve,reject) => {\n    let query = \"UPDATE \" + tblName + \" SET \";\n    for(let col of columns){\n      query += col + \"=?,\";\n    }\n    query = query.substr(0, query.length - 1);\n    query += \" WHERE RowId = ?;\";\n    this.openDatabase().then((db: SQLiteObject) => {\n      db.executeSql(query, values).then(() => {\n        resolve();\n      }).catch((err) => {\n        reject(\"Error while updating record!\");\n      });\n    }).catch((err) => {\n      reject(\"Error while connecting to local database!\");\n    });\n  });\n}\n\ndeleteFromTable(tblName, row){\n  return new Promise((resolve, reject) => {\n    if(row != null){\n      let query = \"DELETE FROM \" + tblName + \" WHERE \";\n      for (let col in row){\n        query += col + \"='\" + row[col] + \"' AND \";\n      }\n      query = query.substr(0, query.length - 4);\n      query += \";\";\n      this.openDatabase().then((db: SQLiteObject) => {\n        db.executeSql(query, []).then(() => {\n          resolve();\n        }).catch((err) => {\n          reject(\"Error while deleting record from table!\");\n        })\n      }).catch((err) => {\n        reject(\"Error while connecting to local database!\");\n      });\n    }\n    else{\n      reject(\"Error with record\");\n    }\n  });\n}\n\n\n\n//SQLITE-SYNC\n\n  AddTableToSynchronization(syncUrl, tblName){\n    return new Promise((resolve, reject) => {\n      let url = syncUrl + \"/AddTable/\" + tblName;\n      this.http.get(url)\n      .subscribe(() => {\n        resolve();\n      }, (err) => {\n        reject(\"Error while adding table to synchronization\");\n      });\n    });\n  }\n\n  RemoveTableFromSynchronization(syncUrl, tblName){\n    return new Promise((resolve, reject) => {\n      let url = syncUrl + \"/RemoveTable/\" + tblName;\n      this.http.get(url)\n      .subscribe(() => {\n        resolve();\n      }, (err) => {\n        reject(\"Error while removing table from synchronization\");\n      });\n    });\n  }\n\n  InitializeSubscriber(syncUrl, subscriberId){\n    return new Promise((resolve,reject) => {\n      let url = syncUrl + \"/InitializeSubscriber/\" + subscriberId;\n      this.http.get(url)\n        .subscribe((res) => {\n          let data = res.json();\n          this.openDatabase().then((db: SQLiteObject) => {\n            db.transaction((tx: any) => {\n              Object.keys(data)\n                .sort()\n                .forEach(function(v,i){\n                  if(i !== 0){\n                    tx.executeSql(data[v],[], function (transaction, result) {\n                      console.log(\"Creating object \" + v + \"...\");\n                    }, function (transaction, error) {\n                      console.log(\"Object \" + v + \": \" + error.message + \" (Code \" + error.code + \")\");\n                    });\n                  }\n                });\n            })\n            .then((res) => {\n              this.getTables().then((data) => {\n                resolve(data);\n              })\n              .catch((err) => {\n                reject(\"Error while getting data from table!\");\n              });\n            })\n            .catch((err) => {\n              reject(\"Error while reinitializing subscriber!\");\n            });\n          });\n        }, (err) => {\n          reject(\"Error while requesting API!\");\n        });\n    });\n  }\n\n\n  SynchronizeSubscriber(syncUrl, subscriberId){\n    return new Promise((resolve,reject) => {\n      this.SendLocalChanges(syncUrl, subscriberId).then(() => {\n        this.clearChangesMarker().then(() => {\n          this.openDatabase().then((db: SQLiteObject) => {\n            let tables = [];\n            db.executeSql(\"select tbl_Name from sqlite_master where type='table' and tbl_Name != 'android_metadata'\", []).then((result) => {\n              for(let i = 0; i < result.rows.length; i++)\n                if (result.rows.item(i).tbl_name.toLowerCase() !== \"MergeDelete\".toLowerCase())\n                  tables.push(result.rows.item(i).tbl_name);\n\n                var promises = tables.map(tbl => {\n                  return this.getRemoteChangesForTable(syncUrl, subscriberId, tbl);\n                });\n              Promise.all(promises).then(() => {\n                resolve(\"sukces\");\n              }).catch((err) => {\n                reject(err);\n              })\n\n            }).catch((err) => {\n              reject(\"Error while getting tables from local database!\");\n            });\n          }).catch((err) => {\n            reject(\"Error while connecting to local database!\");\n          })\n\n        }).catch((err) => {\n          reject(err);\n        })\n      }).catch((err) => {\n        reject(err);\n      })\n    });\n  }\n\n\n\n  SendLocalChanges(syncUrl, subscriberId){\n    return new Promise((resolve,reject) => {\n      let queries = [];\n      let changes = \"\";\n      let tables = [];\n      this.openDatabase().then((db:SQLiteObject) => {\n        let SelectAllTables = \"SELECT tbl_name FROM sqlite_master WHERE type='table' AND sql LIKE '%RowId%' AND tbl_name != 'android_metadata';\";\n        db.executeSql(SelectAllTables, [])\n          .then((result) => {\n            for(let i = 0; i < result.rows.length; i++)\n              tables.push(result.rows.item(i).tbl_name);\n\n            changes += \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><SyncData xmlns=\\\"urn:sync-schema\\\">\";\n\n            for(let tableName of tables){\n              if(tableName.toLowerCase() !== \"MergeDelete\".toLowerCase()){\n                queries.push({\n                  'insert': \"SELECT * FROM \" + tableName + \" WHERE RowId IS NULL;\",\n                  'update': \"SELECT * FROM \" + tableName + \" WHERE RowId IS NOT NULL AND MergeUpdate > 0;\",\n                  'table': tableName\n                });\n              }\n            }\n\n            db.transaction(function(tx){\n              for(let query of queries){\n                tx.executeSql(query.insert, [],\n                  function(tx, result) {\n                    changes += \"<tab n=\\\"\" + query.table + \"\\\">\";\n                    changes += \"<ins>\";\n                    for(let i = 0; i < result.rows.length; i++){\n                      changes += \"<r>\";\n                      for(let key in result.rows.item(i))\n                        if(key.toLowerCase() !== \"MergeUpdate\".toLowerCase())\n                          changes += \"<\" + key + \"><![CDATA[\" + result.rows.item(i)[key] + \"]]></\" + key + \">\";\n                      changes += \"</r>\";\n                    }\n                    changes += \"</ins>\";\n                  }, null);\n                tx.executeSql(query.update, [],\n                  function(tx, result) {\n                    changes += \"<upd>\";\n                    for(let i = 0; i < result.rows.length; i++){\n                      changes += \"<r>\";\n                      for(let key in result.rows.item(i))\n                        if(key.toLowerCase() !== \"MergeUpdate\".toLowerCase())\n                          changes += \"<\" + key + \"><![CDATA[\" + result.rows.item(i)[key] + \"]]></\" + key + \">\";\n                      changes += \"</r>\";\n                    }\n                    changes += \"</upd></tab>\";\n                  }, null);\n              }\n            }).then(() => {\n              db.executeSql(\"SELECT TableId,RowId FROM MergeDelete;\",[]).then((result) => {\n                changes += \"<delete>\";\n                for(let i = 0; i < result.rows.length; i++)\n                  changes += \"<r><tb>\" + result.rows.item(i)[\"TableId\"] + \"</tb><id>\" + result.rows.item(i)[\"RowId\"] + \"</id></r>\";\n                changes += \"</delete></SyncData>\";\n                let url = syncUrl + \"/Send\";\n                let headers = new Headers({\n                  'Content-Type': 'application/json'\n                });\n                let options = new RequestOptions({headers: headers});\n                let data = JSON.stringify({\n                  \"subscriber\": subscriberId,\n                  \"content\": changes,\n                  \"version\": \"3\"\n                });\n                this.http.post(url, data, options)\n                  .subscribe(() => {\n                    resolve();\n                  }, (err) => {\n                    reject(\"Error while sending data to remote database.\");\n                  })\n              });\n            });\n\n          }).catch((err) => {\n          reject(\"Error while getting tables from local database!\");\n          })\n      }).catch((err) => {\n        reject(\"Error while connecting to database!\");\n      })\n    });\n  }\n\n  clearChangesMarker(){\n    return new Promise((resolve,reject) => {\n      let query = \"select tbl_Name from sqlite_master where type='table' and sql like '%RowId%';\";\n      let tables = [];\n      this.openDatabase().then((db: SQLiteObject) => {\n        db.executeSql(query, []).then((result) => {\n          for(let i = 0; i < result.rows.length; i++)\n            tables.push(result.rows.item(i).tbl_name);\n          db.transaction(function(tx){\n            for(let tblName of tables){\n              if(tblName.toLowerCase() === \"MergeIdentity\".toLowerCase()){\n                tx.executeSql(\"UPDATE MergeIdentity SET MergeUpdate=0 WHERE MergeUpdate > 0;\", [], null, null);\n              }\n              if(tblName.toLowerCase() !== \"MergeDelete\".toLowerCase() && tblName.toLowerCase() !== \"MergeIdentity\".toLowerCase()){\n                query = \"SELECT sql FROM sqlite_master WHERE type='trigger' AND name LIKE 'trMergeUpdate_\" + tblName + \"'\";\n                let updTriggerSQL = null;\n                tx.executeSql(query, [],\n                  function(transaction, result) {\n                    updTriggerSQL = result.rows.item(0)[0];\n                    if (updTriggerSQL != null){\n                      tx.executeSql(\"DROP trigger trMergeUpdate_\" + tblName, [], null, null);\n                      tx.executeSql(\"UPDATE \" + tblName + \" SET MergeUpdate=0 WHERE MergeUpdate > 0;\", [], null, null);\n                      tx.executeSql(updTriggerSQL, [], null, null);\n                    }\n                  }, function(transaction, error){\n                });\n              }\n            }\n            tx.executeSql(\"DELETE FROM MergeDelete;\",[],null,null);\n          }).then(() => {\n            resolve();\n          }).catch((err) => {\n            reject(\"Error while clearing local markers\");\n          });\n        }).catch((err) => {\n        reject(\"Error while getting tables from local database!\");\n        });\n      }).catch((err) => {\n        reject(\"Error while connecting to database!\");\n      });\n    });\n  }\n\n\n  getRemoteChangesForTable(syncUrl, subscriberId, tableName) {\n    return new Promise((resolve, reject) => {\n      let url = syncUrl + \"/Sync/\" + subscriberId + \"/\" + tableName;\n      this.http.get(url).map(data => data.json()).subscribe((data) => {\n        this.ResponseToSqliteSyncObject(data).then((result) => {\n          let SqliteSyncObject = JSON.parse(JSON.stringify(result));\n          if(SqliteSyncObject.SyncId !== -1) {\n            this.openDatabase().then((db: SQLiteObject) => {\n              db.transaction(function(tx){\n                if(SqliteSyncObject.TriggerInsertDrop.length > 0){\n                  tx.executeSql(SqliteSyncObject.TriggerInsertDrop, [], null, null);\n                }\n                if(SqliteSyncObject.TriggerUpdateDrop.length > 0){\n                  tx.executeSql(SqliteSyncObject.TriggerUpdateDrop, [], null, null);\n                }\n                if(SqliteSyncObject.TriggerDeleteDrop.length > 0){\n                  tx.executeSql(SqliteSyncObject.TriggerDeleteDrop, [], null, null);\n                }\n                for(let record of SqliteSyncObject.Records){\n                  switch(record.Action){\n                    case '1':\n                      tx.executeSql(SqliteSyncObject.QueryInsert, record.Columns, null, null);\n                      break;\n                    case '2':\n                      tx.executeSql(SqliteSyncObject.QueryUpdate, record.Columns, null, null);\n                      break;\n                    case '3':\n                      tx.executeSql(SqliteSyncObject.QueryDelete + \"?\", record.Columns, null, null);\n                      break;\n                  }\n                }\n\n                if(SqliteSyncObject.TriggerInsert.length > 0){\n                    tx.executeSql(SqliteSyncObject.TriggerInsert, [], null, null);\n                }\n                if(SqliteSyncObject.TriggerUpdate.length > 0){\n                    tx.executeSql(SqliteSyncObject.TriggerUpdate, [], null, null);\n                }\n                if(SqliteSyncObject.TriggerDelete.length > 0){\n                    tx.executeSql(SqliteSyncObject.TriggerDelete, [], null, null);\n                }\n\n              }).then(() => {\n                this.CommmitSynchronization(syncUrl, SqliteSyncObject.SyncId).then(() => {\n                  resolve();\n                }).catch((err) => {\n                  reject(err);\n                });\n              }).catch((err) => {\n                reject(\"Error while syncing databases!\");\n              });\n            }).catch((err) => {\n              reject(\"Error while connecting to database!\");\n            });\n          }\n          else{\n            resolve();\n          }\n        });\n      }, (err) => {\n        reject(\"Error while connecting to server!\");\n      })\n\n    });\n  }\n\n  CommmitSynchronization(syncUrl, syncId){\n\n    return new Promise((resolve, reject) => {\n      let url = syncUrl + \"/CommitSync/\" + syncId;\n      this.http.get(url).subscribe(() => {\n        resolve();\n      }, (err) => {\n        reject(\"Error while commiting synchronization\");\n      })\n    })\n  }\n\n  ResponseToSqliteSyncObject(data){\n    return new Promise((resolve) => {\n      let SqliteSyncObject = {\n        SyncId: data[0].SyncId,\n        TableName: data[0].TableName,\n        Records: [],\n        QueryInsert: data[0].QueryInsert,\n        QueryUpdate: data[0].QueryUpdate,\n        QueryDelete: data[0].QueryDelete,\n        TriggerInsert: data[0].TriggerInsert,\n        TriggerUpdate: data[0].TriggerUpdate,\n        TriggerDelete: data[0].TriggerDelete,\n        TriggerInsertDrop: data[0].TriggerInsertDrop,\n        TriggerUpdateDrop: data[0].TriggerUpdateDrop,\n        TriggerDeleteDrop: data[0].TriggerDeleteDrop,\n      }\n\n      xml2js.parseString(data[0].Records, function (err, result) {\n        if(result && result.records){\n          for(let i = 0; i < result.records.r.length; i++){\n            let record = {\n              Action: result.records.r[i].$.a,\n              Columns: []\n            };\n            for(let ii = 0; ii < result.records.r[i].c.length; ii++){\n              record.Columns.push(result.records.r[i].c[ii]);\n            }\n            SqliteSyncObject.Records.push(record);\n          }\n          resolve(SqliteSyncObject);\n        }\n        else{\n          resolve(SqliteSyncObject);\n        }\n      });\n    })\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/sqlite-sync/sqlite-sync.ts"],"sourceRoot":""}